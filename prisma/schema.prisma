// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String  @id @default(uuid())
  name      String?
  email     String  @unique
  password  String
  contactNo String?
  address   String?
  image     String?
}

model Specialist {
  id        String     @id @default(uuid())
  name      String?
  email     String     @unique
  password  String
  contactNo String?
  address   String?
  image     String?
  skill     String?
  rating    Int?
  Services  Services[]
}

model Customer {
  id        String     @id @default(uuid())
  name      String?
  email     String     @unique
  password  String
  contactNo String?
  address   String?
  image     String?
  Bookings  Bookings[]
  Reviews   Reviews[]
}

model Services {
  id           String     @id @default(uuid())
  name         String     @unique
  description  String?
  price        Int
  time         Float?
  image        String?
  specialist   Specialist @relation(fields: [specialistId], references: [id])
  specialistId String
  Bookings     Bookings[]
}

model Bookings {
  id         String   @id @default(uuid())
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId String
  service    Services @relation(fields: [serviceId], references: [id])
  serviceId  String
  timeSlot   DateTime
}

model Reviews {
  id            String   @id @default(uuid())
  customerEmail String   @unique
  customerId    String   @unique
  customer      Customer @relation(fields: [customerId], references: [id])
  rating        Int
  comment       String
}

model MyNotification {
  id        String   @id @default(uuid())
  email     String
  title     String
  details   String
  readen    Boolean  @default(false)
  timestamp DateTime @default(now())
}

model PublicNotification {
  id        String   @id @default(uuid())
  title     String
  details   String
  readers   String[]
  timestamp DateTime @default(now())
}
